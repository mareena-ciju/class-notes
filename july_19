Representation details object
-----------------------------
7.py
#def new_student(name, age, rank):
#    s = Student()
#    s.name = name
#    s.age = age
#    s.rank = rank
#    return s


class Student:
    def __init__(s, name, age, rank):
        s.name = name
        s.age = age
        s.rank = rank

student1 = Student('John', 20, 100)

student2 = Student('Ram', 19, 120)


# return student whose rank is better

def higher_rank(a, b):
    if a.rank < b.rank:
        return a
    else:
        return b


s = higher_rank(student1, student2)
print s.name, s.age, s.rank

o/p:John 20 100
8.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

student1 = Student('John', 20, 100)

student2 = Student('Ram', 19, 120)


# return student whose rank is better

def higher_rank(a, b):
    if a.rank < b.rank:
        return a
    else:
        return b


s = higher_rank(student1, student2)
print s.name, s.age, s.rank
o/p:John 20 100
9.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

student1 = Student('John', 20, 100)

print student1

o/p:<__main__.Student instance at 0x7f1588f1fcf8>
 10.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

    def __str__(self):
        return 'name = %s, age = %d, rank = %d' % (self.name, self.age, self.rank)

student1 = Student('John', 20, 100)

print student1
o/p:name = John, age = 20, rank = 100

 11.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

    def __str__(self):
        return 'name = %s, age = %d, rank = %d' % (self.name, self.age, self.rank)

    def higher_rank(self, other):
        if self.rank < other.rank:
            return self
        else:
            return other

    
student1 = Student('John', 20, 100)

student2 = Student('Ram', 19, 120)


# return student whose rank is better


s = student1.higher_rank(student2)

print s

o/p:name = John, age = 20, rank = 100
12.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

    def __str__(self):
        return 'name = %s, age = %d, rank = %d' % (self.name, self.age, self.rank)

    def lower(self, other):
        if self.rank > other.rank:
            return True
        else:
            return False

    
student1 = Student('John', 20, 100)

student2 = Student('Ram', 19, 120)


# check whether student1's rank is lower than student2's rank


s = student1.lower(student2)

print s
o/p:False
13.py

class Student:
    def __init__(self, name, age, rank):
        self.name = name
        self.age = age
        self.rank = rank

    def __str__(self):
        return 'name = %s, age = %d, rank = %d' % (self.name, self.age, self.rank)

    def __lt__(self, other):
        if self.rank > other.rank:
            return True
        else:
            return False

    
student1 = Student('John', 20, 100)

student2 = Student('Ram', 19, 120)


# check whether student1's rank is lower than student2's rank


s = student2 < student1

print s
o/p:True
