Regular expression
------------------
'\s+$' \s ->space

Dos :Denial of service attack.

O O Programming
---------------
a)Compositioning: has A relationship

b)Inheritance: Is A relationship

combine classes/objects -> more complexstuff

Hoe do you combine?

*real world entities, "modelling" account, real world entities will often be related to each other.

class encapsulate brings together data.

Inheritance
-----------
1.py 

class Foo:
  def fun1(self):
    print 'Foo: fun1'

class Bar:
  def fun2(self):
    print 'Bar: fun2'

b = Bar()
b.fun2()

o/p:Bar: fun2

2.py 

class Foo:
  def fun1(self):
    print 'Foo: fun1'

class Bar:
  def fun2(self):
    print 'Bar: fun2'

b = Bar()
b.fun1()

o/p:
Traceback (most recent call last):
  File "2.py", line 11, in <module>
    b.fun1()
AttributeError: Bar instance has no attribute 'fun1'

3.py 

class Foo:
  def fun1(self):
    print 'Foo: fun1'

class Bar(Foo):
  def fun2(self):
    print 'Bar: fun2'

b = Bar()
b.fun1()

o/p:
Foo: fun1

4.py 

class Foo:
    def fun1(self):
        print 'Foo: fun1'

    def fun2(self):
        print 'Foo: fun2'

class Bar(Foo):
    def fun1(self):
        print 'Bar: fun1'

b = Bar()
b.fun1()
b.fun2()

o/p:
Bar: fun1
Foo: fun2

5.py 

class Account:
    def __init__(self, balance=0):
        self.balance = balance

    def deposit(self, amt):
        self.balance += amt

    def withdraw(self, amt):
        self.balance -= amt

    def check_balance(self):
        return self.balance

class LimitedAccount(Account):
    def withdraw(self, amt):
        if (self.balance - amt) < 0:
            print 'Balance is only %d' % self.balance
            print 'Can not withdraw %d' % amt  
        else:
            self.balance -= amt

acc1 = LimitedAccount(100)
acc1.withdraw(200)

o/p:
Balance is only 100
Can not withdraw 200

it should not be misused use of multiple inheritance is highly discouraged.

OO AD:UML -> Unified Modelling Language.

OO 1980 -> GUI

OO design maps very well to this problem do main(GUI's)

Complier design: Cprocedural electronic circuit simulation, digital circuit simulation.

